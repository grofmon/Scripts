#!/bin/sh
DATE=`date +%Y%m%d`
SEP="\n#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#\n"
RESULT=1
mailfr="delta-build@echostar.com"
mailto="montgomery.groff@echostar.com"
#mailto="montgomery.groff@echostar.com"
#BDAILY=false

export PATH=$PATH:/ccshare/linux/cc_tools/perl_scripts:/ccshare/linux/c_scripts:/ccshare/linux/cc_tools:/ccshare/linux/cc_tools/build_scripts

daily_dir=/ccshare/linux/c_files/delta/release_validation
daily_archive=$daily_dir/archive
daily_archerr=$daily_dir/errors
daily_bin=$daily_dir/delta_rel_$DATE.bin
daily_log=$daily_dir/delta_rel_$DATE.log
daily_err=$daily_dir/delta_rel_$DATE.err
daily_cfg=$daily_dir/delta_rel_$DATE.cfg
daily_nte=/home/monty/Documents/delta/build-notes.txt
daily_cln="find $daily_archive -mtime +7 -print -delete"
daily_tip=/home/monty/bin/daily_tipcheck
BIN_FILE=/vobs/project/DELTA/out/image/delta_rel.bin

ccswid=`date +%m%d`
ccmkview='cleartool mkview -tag'
ccsetcs="cleartool setcs -tag"
ccsetview="cleartool setview -exec"
ccendview="cleartool endview -ser"
ccrmview="cleartool rmview -tag"
ccview=monty_daily_release
ccconfig_spec="/ccshare/linux/c_spec/delta_cs.txt"
ccbuild="make -C /vobs/project/DELTA Release SWID=$ccswid"
cccopy="cp $BIN_FILE $daily_bin"
cccfg="$daily_tip"

#Used to echo to the file only
CSV="$ccsetcs $ccview $ccconfig_spec"
BLD="$ccsetview \"$ccbuild\" $ccview"
CPY="$ccsetview \"$cccopy\" $ccview"
MKV="$ccmkview $ccview ~/views/$ccview.vws"
RMV="$ccrmview $ccview"
ERR="cp $daily_log $daily_err"
CFG="$cccfg delta_cs.txt"

if [ "$BDAILY" != "false" ]; then

    # Cleanup yesterday's files
    cd $daily_dir > /dev/null 2>&1
    mv *.bin *log *.cfg $daily_archive > /dev/null 2>&1
    mv *.err $daily_archerr > /dev/null 2>&1
    sleep 10

    echo "Starting Daily RELEASE_BUILD for DELTA at `date`" > $daily_log
    echo -e $SEP >> $daily_log

    # Make a new view
    echo "Executing :: $MKV" >> $daily_log
    echo -e $SEP >> $daily_log
    $ccmkview $ccview ~/views/$ccview.vws >> $daily_log 2>&1
    echo -e $SEP >> $daily_log

    # Set the config spec
    echo "Executing :: $CSV" >> $daily_log
    echo -e $SEP >> $daily_log
    $ccsetcs $ccview $ccconfig_spec >> $daily_log 2>&1
    echo -e $SEP >> $daily_log

    # Log the config spec
    echo "Executing :: $CFG" >> $daily_log
    echo -e $SEP >> $daily_log
    $cccfg delta_cs.txt >> $daily_log 2>&1
    $cccfg "delta_cs.txt" > $daily_cfg
    echo -e $SEP >> $daily_log

    # Build the code
    echo "Executing :: $BLD" >> $daily_log
    echo -e $SEP >> $daily_log
    $ccsetview "$ccbuild" $ccview >> $daily_log 2>&1
    STAT=$?
    if [ $STAT != 0 ]; then
        $ERR
        echo -e "DELTA RELEASE_BUILD\nBUILD ERROR: see $daily_err\n" | mail -s "ERROR: DELTA Daily RELEASE_BUILD FAILED !! : $DATE" $mailto -- -f $mailfr
    else
        RESULT=0
    fi
    echo -e $SEP >> $daily_log

    # Copy the .bin file
    echo "Executing :: $CPY" >> $daily_log
    echo -e $SEP >> $daily_log
    $ccsetview "$cccopy" $ccview >> $daily_log 2>&1
    echo -e $SEP >> $daily_log

    # Cleanup the archived files. Delete files older than 7 days
    echo "Executing :: $daily_cln" >> $daily_log
    echo -e $SEP >> $daily_log
    cd $daily_archive
    $daily_cln >> $daily_log
    echo -e $SEP >> $daily_log
    
    # Remove the view to ensure a clean build tomorrow
    echo "Executing :: $RMV" >> $daily_log
    echo -e $SEP >> $daily_log
    $ccrmview $ccview >> $daily_log 2>&1
    echo -e $SEP >> $daily_log

    echo "Finished at `date`" >> $daily_log

    if [ $RESULT == 0 ]; then
        echo -e "The DELTA daily RELEASE_BUILD completed successfully. The following files are available:\n\nBinary image (untested):\n$daily_bin\n\nBuild log file:\n$daily_log\n\nConfig spec used for this build:\n$daily_cfg\n\nPrevious builds are located in the 'archive' directory. Archives will be kept for 1 week, then removed from the repository.\n" | mail -s "DELTA Daily RELEASE_BUILD Success : $DATE" $mailto -- -f $mailfr
    else
        rm $daily_log
    fi
else
    echo -e "Daily Build on hold indefinately" | mail -s "DELTA No Daily Build Today" $mailfr -- -f $mailfr
fi